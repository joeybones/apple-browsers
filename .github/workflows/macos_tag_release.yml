name: macOS - Tag Release

defaults:
  run:
    working-directory: macOS

on:
  workflow_dispatch:
    inputs:
      asana-task-url:
        description: "Asana release task URL"
        required: true
        type: string
      base-branch:
        description: "Base branch name (defaults to main, only override for testing)"
        required: false
        type: string
      branch:
        description: "Branch name"
        required: false
        type: string
      prerelease:
        description: "Is this a pre-release? (a.k.a. internal release)"
        required: true
        type: boolean
      ignore-unreleased-changes:
        description: "Whether to ignore unreleased changes when tagging a public release"
        type: boolean
        default: false
  workflow_call:
    inputs:
      asana-task-url:
        description: "Asana release task URL"
        required: true
        type: string
      base-branch:
        description: "Base branch name (defaults to main, only override for testing)"
        required: false
        type: string
      branch:
        description: "Branch name"
        required: false
        type: string
      prerelease:
        description: "Is this a pre-release? (a.k.a. internal release)"
        required: true
        type: boolean
      internal-release-bump:
        description: "Is this an internal release bump? (the subsequent internal release of the current week)"
        default: false
        type: boolean
      ignore-unreleased-changes:
        description: "Whether to ignore unreleased changes when tagging a public release"
        type: boolean
        default: false
    secrets:
      ASANA_ACCESS_TOKEN:
        required: true
      GHA_ELEVATED_PERMISSIONS_TOKEN:
        required: true

jobs:
  tag-release:

    name: Tag Release

    # This doesn't need Xcode, so could technically run on Ubuntu, but actions that add comments and tasks
    # in Asana use BSD-specific sed syntax, that doesn't work with GNU sed (available on Linux).
    runs-on: macos-15

    env:
      asana-task-url: ${{ github.event.inputs.asana-task-url || inputs.asana-task-url }}
      BASE_BRANCH: ${{ inputs.base-branch || 'main' }}
      BRANCH: ${{ inputs.branch || github.ref_name }}
      prerelease: ${{ github.event.inputs.prerelease || inputs.prerelease }}
      internal-release-bump: ${{ inputs.internal-release-bump || 'false' }}
      ignore-unreleased-changes: ${{ github.event.inputs.ignore-unreleased-changes || inputs.ignore-unreleased-changes }}

    outputs:
      tag: ${{ steps.tag-release.outputs.tag }}

    steps:

    - name: Check out the code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history and tags in order to look up tags
        submodules: recursive
        ref: ${{ env.BRANCH }}

    - name: Assert release branch
      run: |
        case "${{ env.BRANCH }}" in
          release/*) ;;
          hotfix/*) ;;
          *) echo "ðŸ‘Ž Not a release or hotfix branch"; exit 1 ;;
        esac

    - name: Setup Ruby and dependencies
      uses: ./.github/actions/setup-ruby
      with:
        working-directory: macOS
        cache-key-prefix: macos-ruby

    - name: Tag Release and merge to base branch
      id: tag-release
      env:
        ASANA_ACCESS_TOKEN: ${{ secrets.ASANA_ACCESS_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_ELEVATED_PERMISSIONS_TOKEN: ${{ secrets.GHA_ELEVATED_PERMISSIONS_TOKEN }}
        WORKFLOW_URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
      run: |
        bundle exec fastlane run tag_release \
          platform:"macos" \
          asana_task_url:"${{ env.asana-task-url }}" \
          base_branch:"${{ env.BASE_BRANCH }}" \
          github_handle:${{ github.actor }} \
          ignore_untagged_commits:"${{ env.ignore-unreleased-changes }}" \
          is_internal_release_bump:"${{ env.internal-release-bump }}" \
          is_prerelease:"${{ env.prerelease }}" \
          is_scheduled_release:"${{ github.event_name == 'schedule' }}"

    - name: Create Publish DMG Release task on failure
      id: create-publish-dmg-task-on-failure
      if: failure() && env.internal-release-bump == 'true'
      env:
        ASANA_TASK_URL: ${{ env.asana-task-url }}
        ASANA_ACCESS_TOKEN: ${{ secrets.ASANA_ACCESS_TOKEN }}
      run: |
        bundle exec fastlane run asana_create_action_item \
          task_url:"${{ env.asana-task-url }}" \
          template_name:"run-publish-dmg-release" \
          github_handle:"${{ github.actor }}" \
          is_scheduled_release:"${{ github.event_name == 'schedule' }}" \
          due_date:"$(date +%Y-%m-%d)"

    - name: Store stop_workflow flag
      if: steps.tag-release.outputs.stop_workflow == 'true'
      run: touch ${{ github.workspace }}/.github/stop_workflow

    - name: Upload stop_workflow flag artifact
      uses: actions/upload-artifact@v4
      if: steps.tag-release.outputs.stop_workflow == 'true'
      with:
        name: stop_workflow
        path: ${{ github.workspace }}/.github/stop_workflow
        retention-days: 1

    - name: Store created tag in a file artifact
      run: echo ${{ steps.tag-release.outputs.tag }} > ${{ github.workspace }}/.github/tag

    - name: Upload tag artifact
      uses: actions/upload-artifact@v4
      with:
        name: tag
        path: ${{ github.workspace }}/.github/tag
        retention-days: 1
