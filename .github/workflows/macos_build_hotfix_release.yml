name: macOS - Build Hotfix Release

defaults:
  run:
    working-directory: macOS

on:
  workflow_dispatch:
    inputs:
      asana-task-url:
        description: "Asana release task URL"
        required: true
        type: string
      base-branch:
        description: "Base branch (defaults to main, only override for testing)"
        required: false
        type: string
      current-internal-release-branch:
        description: "Current internal release branch (to merge hotfix branch to - hotfix branch is merged to main if this is not provided)"
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:

  assert_release_branch:

    name: Assert Hotfix Branch

    runs-on: ubuntu-latest
    timeout-minutes: 10

    outputs:
      asana_task_id: ${{ steps.task-id.outputs.asana_task_id }}

    steps:

      - name: Check out the code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Assert hotfix release branch
        run: |
          case "${{ github.ref }}" in
            refs/heads/hotfix/*) ;;
            *) echo "ðŸ‘Ž Not a hotfix release branch"; exit 1 ;;
          esac

      - name: Setup Ruby and dependencies
        uses: ./.github/actions/setup-ruby
        with:
          working-directory: macOS
          cache-key-prefix: macos-ruby

      - name: Extract Asana Task ID
        id: task-id
        run: bundle exec fastlane run asana_extract_task_id task_url:"${{ github.event.inputs.asana-task-url }}"

  run_tests:

    name: Run Tests

    needs: assert_release_branch
    uses: ./.github/workflows/macos_pr_checks.yml
    secrets: inherit

  update_asana:

    name: Update Asana tasks

    needs: [assert_release_branch, run_tests]
    runs-on: macos-15
    timeout-minutes: 10

    outputs:
      commit_sha: ${{ steps.set-commit-sha.outputs.commit_sha }}

    steps:

      - name: Check out the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history and tags in order to extract Asana task URLs from git log
          ref: ${{ github.ref_name }}
          submodules: recursive

      - name: Set commit SHA output
        id: set-commit-sha
        run: |
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Ruby and dependencies
        uses: ./.github/actions/setup-ruby
        with:
          working-directory: macOS
          cache-key-prefix: macos-ruby

      - name: Update Asana for the release
        id: update-asana
        continue-on-error: true
        env:
          ASANA_ACCESS_TOKEN: ${{ secrets.ASANA_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ github.token }}
          BRANCH: ${{ github.ref_name }}
        run: |
          bundle exec fastlane run update_asana_for_release \
            platform:macos \
            release_type:internal \
            github_handle:"${{ github.actor }}" \
            is_scheduled_release:"${{ github.event_name == 'schedule' }}" \
            release_task_id:"${{ needs.assert_release_branch.outputs.asana_task_id }}" \
            target_section_id:"${{ vars.MACOS_APP_BOARD_VALIDATION_SECTION_ID }}"

  prepare_release:
    name: Prepare Release
    needs: [run_tests, update_asana]
    uses: ./.github/workflows/macos_release.yml
    with:
      asana-task-url: ${{ github.event.inputs.asana-task-url }}
      commit-sha: ${{ needs.update_asana.outputs.commit_sha }}
      destination: appstore
    secrets: inherit

  tag_and_merge:
    name: Tag and Merge Branch
    needs: [ prepare_release, update_asana ]
    uses: ./.github/workflows/macos_tag_release.yml
    with:
      asana-task-url: ${{ github.event.inputs.asana-task-url }}
      branch: ${{ github.ref_name }}
      base-branch: ${{ github.event.inputs.current-internal-release-branch || 'main' }}
      commit-sha: ${{ needs.update_asana.outputs.commit_sha }}
      prerelease: true # Pre-release for now, and the actual release will be done as part of publish_dmg_release that's called later
    secrets: inherit

  report_failure:
    name: Report Failure
    needs: [ assert_release_branch, run_tests, update_asana, prepare_release, tag_and_merge ]
    if: always() && (needs.run_tests.result == 'failure' || needs.update_asana.result == 'failure' || needs.prepare_release.result == 'failure' || needs.tag_and_merge.result == 'failure')
    uses: ./.github/workflows/report_failed_release_workflow.yml
    with:
      asana-task-id: ${{ needs.assert_release_branch.outputs.asana_task_id }}
      branch: ${{ github.ref_name }}
      commit-sha: ${{ needs.update_asana.outputs.commit_sha }}
      platform: macos
      workflow-name: "build hotfix release"
    secrets: inherit
